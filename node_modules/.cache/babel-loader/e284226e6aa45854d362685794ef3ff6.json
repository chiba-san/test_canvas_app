{"ast":null,"code":"// Функция createSmartappDebugger используется в development среде. В production среде необходимо использовать createAssistant.\nimport { createAssistant, createSmartappDebugger } from '@sberdevices/assistant-client';\n\nconst initialize = getState => {\n  if (process.env.NODE_ENV === 'development' && window.Cypress == null) {\n    var _process$env$REACT_AP;\n\n    console.log(process.env.REACT_APP_SMARTAPP);\n    console.log(process.env.REACT_APP_TOKEN);\n    let result = createSmartappDebugger({\n      token: (_process$env$REACT_AP = process.env.REACT_APP_TOKEN) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: 'Покажи что-нибудь',\n        screenshotMode: false,\n        tabIndex: -1\n      }\n    });\n    console.log(result);\n    return result;\n  }\n\n  return createAssistant({\n    getState\n  });\n};\n\nconst assistant = initialize(() => state, () => recoveryState);\nassistant.on('data', command => {\n  // Подписка на команды ассистента, в т.ч. команда инициализации смартапа.\n  // Ниже представлен пример обработки голосовых команд \"ниже\"/\"выше\"\n  if (command.navigation) {\n    switch (command.navigation.command) {\n      case 'UP':\n        window.scrollTo(0, 0);\n        break;\n\n      case 'DOWN':\n        window.scrollTo(0, 1000);\n        break;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/a19404057/Documents/assistant-client/assistant-client/examples/todo-canvas-app/src/App.tsx"],"names":["createAssistant","createSmartappDebugger","initialize","getState","process","env","NODE_ENV","window","Cypress","console","log","REACT_APP_SMARTAPP","REACT_APP_TOKEN","result","token","initPhrase","nativePanel","defaultText","screenshotMode","tabIndex","assistant","state","recoveryState","on","command","navigation","scrollTo"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,sBAA1B,QAAwD,+BAAxD;;AAEA,MAAMC,UAAU,GAAIC,QAAD,IAAmB;AAClC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CC,MAAM,CAACC,OAAP,IAAkB,IAAhE,EAAsE;AAAA;;AAClEC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACC,GAAR,CAAYM,kBAAxB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACC,GAAR,CAAYO,eAAxB;AAEA,QAAIC,MAAM,GAAGZ,sBAAsB,CAAC;AAChCa,MAAAA,KAAK,2BAAEV,OAAO,CAACC,GAAR,CAAYO,eAAd,yEAAiC,EADN;AAEhCG,MAAAA,UAAU,EAAG,WAAUX,OAAO,CAACC,GAAR,CAAYM,kBAAmB,EAFtB;AAGhCR,MAAAA,QAHgC;AAIhCa,MAAAA,WAAW,EAAE;AACTC,QAAAA,WAAW,EAAE,mBADJ;AAETC,QAAAA,cAAc,EAAE,KAFP;AAGTC,QAAAA,QAAQ,EAAE,CAAC;AAHF;AAJmB,KAAD,CAAnC;AAUAV,IAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACA,WAAOA,MAAP;AACH;;AAED,SAAOb,eAAe,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAtB;AACH,CApBD;;AAsBA,MAAMiB,SAAS,GAAGlB,UAAU,CAAC,MAAMmB,KAAP,EAAc,MAAMC,aAApB,CAA5B;AACAF,SAAS,CAACG,EAAV,CAAa,MAAb,EAAsBC,OAAD,IAAa;AAC9B;AACA;AACA,MAAIA,OAAO,CAACC,UAAZ,EAAwB;AACpB,YAAOD,OAAO,CAACC,UAAR,CAAmBD,OAA1B;AACI,WAAK,IAAL;AACIjB,QAAAA,MAAM,CAACmB,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA;;AACJ,WAAK,MAAL;AACInB,QAAAA,MAAM,CAACmB,QAAP,CAAgB,CAAhB,EAAmB,IAAnB;AACA;AANR;AAQH;AACJ,CAbD","sourcesContent":["// Функция createSmartappDebugger используется в development среде. В production среде необходимо использовать createAssistant.\nimport { createAssistant, createSmartappDebugger } from '@sberdevices/assistant-client';\n\nconst initialize = (getState: any) => {\n    if (process.env.NODE_ENV === 'development' && window.Cypress == null) {\n        console.log(process.env.REACT_APP_SMARTAPP);\n        console.log(process.env.REACT_APP_TOKEN);        \n        \n        let result = createSmartappDebugger({\n            token: process.env.REACT_APP_TOKEN ?? '',\n            initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n            getState,\n            nativePanel: {\n                defaultText: 'Покажи что-нибудь',\n                screenshotMode: false,\n                tabIndex: -1,\n            },\n        });\n        console.log(result);  \n        return result\n    }\n\n    return createAssistant({ getState });\n};\n\nconst assistant = initialize(() => state, () => recoveryState);\nassistant.on('data', (command) => {\n    // Подписка на команды ассистента, в т.ч. команда инициализации смартапа.\n    // Ниже представлен пример обработки голосовых команд \"ниже\"/\"выше\"\n    if (command.navigation) {\n        switch(command.navigation.command) {\n            case 'UP':\n                window.scrollTo(0, 0);\n                break;\n            case 'DOWN':\n                window.scrollTo(0, 1000);\n                break;\n        }\n    }\n});"]},"metadata":{},"sourceType":"module"}