{"ast":null,"code":"var _jsxFileName = \"/Users/a19404057/Documents/assistant-client/assistant-client/examples/todo-canvas-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useReducer, useState, useRef, useEffect } from 'react';\nimport { createSmartappDebugger, createAssistant } from '@sberdevices/assistant-client';\nimport './App.css';\nimport { reducer } from './store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst initializeAssistant = getState => {\n  if (process.env.NODE_ENV === 'development' && window.Cypress == null) {\n    var _process$env$REACT_AP;\n\n    let result = createSmartappDebugger({\n      token: (_process$env$REACT_AP = process.env.REACT_APP_TOKEN) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : '',\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n      nativePanel: {\n        defaultText: 'Покажи что-нибудь',\n        screenshotMode: false,\n        tabIndex: -1\n      }\n    });\n    console.log(result);\n    return result;\n  }\n\n  return createAssistant({\n    getState\n  });\n};\n\nexport const App = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n\n  const [appState, dispatch] = useReducer(reducer, {\n    notes: [{\n      id: 'uinmh',\n      title: 'купить хлеб',\n      completed: false\n    }]\n  });\n  const [note, setNote] = useState('');\n  const assistantStateRef = useRef();\n  const assistantRef = useRef();\n  useEffect(() => {\n    assistantRef.current = initializeAssistant(() => assistantStateRef.current);\n    assistantRef.current.on('data', _ref => {\n      let {\n        navigation,\n        action\n      } = _ref;\n\n      if (navigation) {\n        switch (navigation.command) {\n          case 'UP':\n            window.scrollTo(0, window.scrollY - 500);\n            break;\n\n          case 'DOWN':\n            window.scrollTo(0, window.scrollY + 500);\n            break;\n        }\n      }\n\n      if (action) {\n        dispatch(action);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    assistantStateRef.current = {\n      item_selector: {\n        items: appState.notes.map((_ref2, index) => {\n          let {\n            id,\n            title\n          } = _ref2;\n          return {\n            number: index + 1,\n            id,\n            title\n          };\n        })\n      }\n    };\n  }, [appState]);\n\n  const doneNote = title => {\n    var _assistantRef$current;\n\n    (_assistantRef$current = assistantRef.current) === null || _assistantRef$current === void 0 ? void 0 : _assistantRef$current.sendData({\n      action: {\n        action_id: 'done',\n        parameters: {\n          title\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        dispatch({\n          type: 'add_note',\n          note\n        });\n        setNote('');\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add-note\",\n        type: \"text\",\n        placeholder: \"Add Note\",\n        value: note,\n        onChange: _ref3 => {\n          let {\n            target: {\n              value\n            }\n          } = _ref3;\n          return setNote(value);\n        },\n        required: true,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notes\",\n      children: appState.notes.map((note, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [index + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecorationLine: note.completed ? 'line-through' : 'none'\n            },\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `checkbox-note-${note.id}`,\n          className: \"done-note\",\n          type: \"checkbox\",\n          checked: note.completed,\n          onChange: () => doneNote(note.title),\n          disabled: note.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}, \"FYscXl0k7MrsKHwei3P7E627gkY=\")), \"FYscXl0k7MrsKHwei3P7E627gkY=\");\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App$memo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/a19404057/Documents/assistant-client/assistant-client/examples/todo-canvas-app/src/App.tsx"],"names":["React","memo","useReducer","useState","useRef","useEffect","createSmartappDebugger","createAssistant","reducer","initializeAssistant","getState","process","env","NODE_ENV","window","Cypress","result","token","REACT_APP_TOKEN","initPhrase","REACT_APP_SMARTAPP","nativePanel","defaultText","screenshotMode","tabIndex","console","log","App","appState","dispatch","notes","id","title","completed","note","setNote","assistantStateRef","assistantRef","current","on","navigation","action","command","scrollTo","scrollY","item_selector","items","map","index","number","doneNote","sendData","action_id","parameters","event","preventDefault","type","target","value","fontWeight","textDecorationLine"],"mappings":"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","sourcesContent":["import React, { FC, memo, useReducer, useState, useRef, useEffect } from 'react';\nimport { createSmartappDebugger, createAssistant, AssistantAppState } from '@sberdevices/assistant-client';\nimport './App.css';\n\nimport { reducer } from './store';\n\nconst initializeAssistant = (getState: any) => {\n    if (process.env.NODE_ENV === 'development' && window.Cypress == null) {\n        let result = createSmartappDebugger({\n            token: process.env.REACT_APP_TOKEN ?? '',\n            initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n            getState,\n            nativePanel: {\n                defaultText: 'Покажи что-нибудь',\n                screenshotMode: false,\n                tabIndex: -1,\n            },\n        });\n        console.log(result);  \n        return result\n    }\n\n    return createAssistant({ getState });\n};\n\nexport const App: FC = memo(() => {\n    const [appState, dispatch] = useReducer(reducer, {\n        notes: [{ id: 'uinmh', title: 'купить хлеб', completed: false }],\n    });\n\n    const [note, setNote] = useState('');\n\n    const assistantStateRef = useRef<AssistantAppState>();\n    const assistantRef = useRef<ReturnType<typeof createAssistant>>();\n\n    useEffect(() => {\n        assistantRef.current = initializeAssistant(() => assistantStateRef.current);\n\n        assistantRef.current.on('data', ({ navigation, action }: any) => {\n            if (navigation) {\n                switch (navigation.command) {\n                    case 'UP':\n                        window.scrollTo(0, window.scrollY - 500);\n                        break;\n                    case 'DOWN':\n                        window.scrollTo(0, window.scrollY + 500);\n                        break;\n                }\n            }\n\n            if (action) {\n                dispatch(action);\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        assistantStateRef.current = {\n            item_selector: {\n                items: appState.notes.map(({ id, title }, index) => ({\n                    number: index + 1,\n                    id,\n                    title,\n                })),\n            },\n        };\n    }, [appState]);\n\n    const doneNote = (title: string) => {\n        assistantRef.current?.sendData({ action: { action_id: 'done', parameters: { title } } });\n    };\n\n    return (\n        <main className=\"container\">\n            <form\n                onSubmit={(event) => {\n                    event.preventDefault();\n                    dispatch({ type: 'add_note', note });\n                    setNote('');\n                }}\n            >\n                <input\n                    className=\"add-note\"\n                    type=\"text\"\n                    placeholder=\"Add Note\"\n                    value={note}\n                    onChange={({ target: { value } }) => setNote(value)}\n                    required\n                    autoFocus\n                />\n            </form>\n            <ul className=\"notes\">\n                {appState.notes.map((note, index) => (\n                    <li className=\"note\" key={note.id}>\n                        <span>\n                            <span style={{ fontWeight: 'bold' }}>{index + 1}. </span>\n                            <span\n                                style={{\n                                    textDecorationLine: note.completed ? 'line-through' : 'none',\n                                }}\n                            >\n                                {note.title}\n                            </span>\n                        </span>\n                        <input\n                            id={`checkbox-note-${note.id}`}\n                            className=\"done-note\"\n                            type=\"checkbox\"\n                            checked={note.completed}\n                            onChange={() => doneNote(note.title)}\n                            disabled={note.completed}\n                        />\n                    </li>\n                ))}\n            </ul>\n        </main>\n    );\n});\n"]},"metadata":{},"sourceType":"module"}